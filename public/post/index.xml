<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Thomas Coopman - Infinite Tree</title>
    <link>https://infinitetree.eu/post/</link>
    <description>Recent content in Posts on Thomas Coopman - Infinite Tree</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 27 Sep 2017 14:39:00 +0100</lastBuildDate>
    
	<atom:link href="https://infinitetree.eu/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A big ball of frontend</title>
      <link>https://infinitetree.eu/blog/2017/09/27/a-big-ball-of-frontend/</link>
      <pubDate>Wed, 27 Sep 2017 14:39:00 +0100</pubDate>
      
      <guid>https://infinitetree.eu/blog/2017/09/27/a-big-ball-of-frontend/</guid>
      <description>Tonight I&amp;rsquo;m giving a talk at Fronteers about Frontend microservices. Mind you, I don&amp;rsquo;t want to go into what a microservice is, so a talk about Frontend services is fine as well.
What is important for me is that we&amp;rsquo;re not building a big ball of frontend. We&amp;rsquo;re paying so much attention to having a good architecture on the backend, with lots of (micro)services but at the same time, we&amp;rsquo;re building one huge single page application (SPA).</description>
    </item>
    
    <item>
      <title>Exploring aggregate boundaries in event sourced systems</title>
      <link>https://infinitetree.eu/blog/2017/02/08/exploring-aggregate-boundaries-in-event-sourced-systems/</link>
      <pubDate>Wed, 08 Feb 2017 20:44:40 +0100</pubDate>
      
      <guid>https://infinitetree.eu/blog/2017/02/08/exploring-aggregate-boundaries-in-event-sourced-systems/</guid>
      <description>In this post I&amp;rsquo;m exploring some ways of modelling aggregate boundaries in an event sourced system. This is mostly to crystallise some thoughts that I had after some event storming sessions, but it might be interesting to someone else.
The domain I&amp;rsquo;m using in this post is the domain that Michel Grootjans and I have created for the workshop Playing with projections (We already gave it a few times, for example at DDD Europe and will also give a session at I T.</description>
    </item>
    
    <item>
      <title>2017</title>
      <link>https://infinitetree.eu/blog/2017/01/03/2017/</link>
      <pubDate>Tue, 03 Jan 2017 19:18:13 +0100</pubDate>
      
      <guid>https://infinitetree.eu/blog/2017/01/03/2017/</guid>
      <description>The year is over, a new year has come.
I know, New Year is an arbitrary point in time but it is a tradition to look back on the past year and have some resolutions for the year to come.
So at this arbitrary point in time, lets look back and forward
2016 I&amp;rsquo;m going to make this short, because I mostly want to look forward!
 Became an independent software consultant Bought a house with my girlfriend Read lots of books Became a teamleader Lots of other cool stuff  2017 Last month I read Building Jarvis from Mark Zuckerberg where he builds himself a Jarvis in 100 hours.</description>
    </item>
    
    <item>
      <title>Programming Phoenix review</title>
      <link>https://infinitetree.eu/blog/2016/06/26/programming-phoenix-review/</link>
      <pubDate>Sun, 26 Jun 2016 10:49:59 +0200</pubDate>
      
      <guid>https://infinitetree.eu/blog/2016/06/26/programming-phoenix-review/</guid>
      <description>Elixir and Phoenix crossed my path multiple times last year. I read a really interesting tutorial on building a web framework from scratch. Furthermore, Phoenix is really popular as an Elm backend, so I decided it was time to dive a bit deeper and learn myself some Phoenix.
It just happens that Program Phoenix by by Chris McCord, Bruce Tate, and Jos√© Valim was published recently, so this seemed like a good opportunity to learn more!</description>
    </item>
    
    <item>
      <title>Modelling money in Elm</title>
      <link>https://infinitetree.eu/blog/2016/04/12/modelling-money-in-elm/</link>
      <pubDate>Tue, 12 Apr 2016 22:28:31 +0200</pubDate>
      
      <guid>https://infinitetree.eu/blog/2016/04/12/modelling-money-in-elm/</guid>
      <description>After reading the blog post of Mathias Verraes (@mathiasverraes) on (Type Safety and Money)[http://verraes.net/2016/02/type-safety-and-money/], and after doing a real short modelling attempt in Haskell at Socrates Belgium, I wanted to try to model Money in Elm.
I don&amp;rsquo;t want to go to deep and too far so I&amp;rsquo;ve set some basic constraints for myself:
 You cannot add money of different currencies (you need an explicit conversion) - Add constraint We also want a Price.</description>
    </item>
    
    <item>
      <title>Welcome</title>
      <link>https://infinitetree.eu/blog/2016/04/12/welcome/</link>
      <pubDate>Tue, 12 Apr 2016 21:28:31 +0200</pubDate>
      
      <guid>https://infinitetree.eu/blog/2016/04/12/welcome/</guid>
      <description>Welcome to the my new site written in hugo. While busy, I&amp;rsquo;ve set up https via letsencrypt. (see tutorial. You can find the source code of the blog here. This is a reboot of my site, and an attempt to blog some more.
So without further ado, let&amp;rsquo;s start blogging :)</description>
    </item>
    
    <item>
      <title>Testing ES6 code</title>
      <link>https://infinitetree.eu/blog/2015/01/13/testing-es6-code/</link>
      <pubDate>Tue, 13 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://infinitetree.eu/blog/2015/01/13/testing-es6-code/</guid>
      <description>Recently, I&amp;rsquo;ve changed my webpack workflow, and switched to 6to5, to be able to write more of my React code in ES6 than the current jsx transpiler supports (and because 6to5 just rocks!). You can find this workflow in my boilerplate-webpack-react project. Switching was easy. I&amp;rsquo;ve just replaced jsx-loader with 6to5-loader and everything worked correctly.
Writing code and developing is a breeze with this workflow, especially with react-hot-loader. I didn&amp;rsquo;t look into writing test though yet, and it took me a little while to find out how to do it, so I explain it here.</description>
    </item>
    
    <item>
      <title>About the site, about me</title>
      <link>https://infinitetree.eu/blog/2014/10/04/about-the-site-about-me/</link>
      <pubDate>Sat, 04 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>https://infinitetree.eu/blog/2014/10/04/about-the-site-about-me/</guid>
      <description>My name is Thomas Coopman and I&amp;rsquo;m a 29 year old developer. Recently I&amp;rsquo;ve officially started freelancing/consulting in my spare time. That&amp;rsquo;s the main reason for creating this site and blog.
On this site you can find some more information about me. At the portfolio page you can see some things I&amp;rsquo;ve created. That page is empty at the moment but it will be coming soon.
I&amp;rsquo;m a developer, mostly a web-developer (backend and frontend).</description>
    </item>
    
    <item>
      <title>Creating this site</title>
      <link>https://infinitetree.eu/blog/2014/09/29/creating-this-site/</link>
      <pubDate>Mon, 29 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://infinitetree.eu/blog/2014/09/29/creating-this-site/</guid>
      <description>This is not valid anymore. The site is build with hugo
This blogpost will be a about the why, but mostly about how I&amp;rsquo;ve created this site.
I&amp;rsquo;ve created this site mostly for these reasons:
 Make myself visible on the web. Practice my design and web-development skills. Practice my writing (blog). Record things I&amp;rsquo;ve learned for myself. Maybe someone else will find something useful here.  Content The contents of this site contain information about me, to make me more visible on the web.</description>
    </item>
    
  </channel>
</rss>